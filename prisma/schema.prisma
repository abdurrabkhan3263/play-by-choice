generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("POSTGRES_PRISMA_URL")
}

// Schemas

model User {
  id       String         @id @default(uuid())
  email    String         @unique
  name     String?
  image    String?
  password String?
  provider CredentialType
  Stream   Stream[]
  Upvote   Upvote[]
  Space    Space[]

  @@index([email])
  @@index([id])
}

model Stream {
  id            String         @id @default(uuid())
  type          StreamType
  url           String
  extractedId   String
  title         String         @default("")
  smallImg      String         @default("")
  bigImg        String         @default("")
  artists       String?        @default("")
  active        Boolean        @default(false)
  played        Boolean        @default(false)
  playedTs      DateTime?
  createdAt     DateTime       @default(now())
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  Upvote        Upvote[]
  space         Space          @relation("SpaceStream",fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId       String
  CurrentStream CurrentStream?
  popularity    Int?           @default(0)
  duration      Int?           @default(0)
  
  @@index([userId])
  @@index([spaceId])
  @@index([id])
}

model CurrentStream {
  id       String @id @default(uuid())
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)
  streamId String @unique
  space    Space  @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId  String

  @@unique([spaceId, streamId])
  @@index([streamId])
  @@index([spaceId])
}

model Upvote {
  id       String  @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)
  streamId String

  @@unique([userId, streamId])
  @@index([userId])
  @@index([streamId])
}

model Space {
  id            String          @id @default(uuid())
  CurrentStream CurrentStream[]
  Stream        Stream[]        @relation("SpaceStream")
  createdBy     User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  name          String?         @default("Untitled")
  createdAt     DateTime        @default(now())
  type          StreamType

  @@index([userId])
  @@index([id])
}

enum CredentialType {
  google
  spotify
}

enum StreamType {
  spotify
  youtube
}
